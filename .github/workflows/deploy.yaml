name: Deploy to ECR

on:
 
  push:
    branches: [ master ]

#env:
  #ECR_REPOSITORY: flask-app
  #ECR_REPOSITORY: lablan/teerepo
  #EKS_CLUSTER_NAME: Kubernetes-lablan-demo 
  #AWS_REGION: us-east-1

jobs:
  
  build:
    
    name: Deployment
    runs-on: self-hosted

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: eksctl Installation for Kubernetes
      run: |
         ARCH=amd64
         PLATFORM=$(uname -s)_$ARCH
         curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
         # (Optional) Verify checksum
         curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
         tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
         sudo mv /tmp/eksctl /usr/local/bin

 - name: Kubernetes Installation with eksctl
      run: |
         eksctl create cluster \
         --name Kubernetes-ghactions-cluster  \
         --region eu-west-2 \
         
    #- name: Kubernetes Installation with eksctl
     # run: |
      #   eksctl create cluster \
       #  --name Kubernetes-ghactions-cluster  \
        # --region eu-west-2 \
         #--nodegroup-name linux-nodes \
        # --node-type t3.micro \
         #--nodes 2 \
         #--nodes-min 1 \
         #--nodes-max 3 \
         #--managed
 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} -f docker/Dockerfile .
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
    - name: Update kube config
      #run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}  --region ${{ secrets.AWS_REGION }}
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|g" manifests/hello-app-deployment.yaml && \
        kubectl apply -f manifests/hello-app-deployment.yaml
        kubectl apply -f manifests/hello-app-service.yaml
